.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.23)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "App::DH 3"
.TH App::DH 3 "2013-02-16" "perl v5.17.9" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::DH \- Deploy your DBIx::Class Schema to DDL/Database via DBIx::Class::DeploymentHandler
.SH "VERSION"
.IX Header "VERSION"
version 0.001001
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Basic usage:
.PP
.Vb 3
\&    #!/usr/bin/env perl
\&    #
\&    # dh.pl
\&
\&    use App::DH;
\&    App::DH\->new_with_options\->run;
.Ve
.PP
\&\-\-
.PP
.Vb 11
\&        usage: dh.pl [\-?cdfhIos] [long options...] (install|upgrade|write_ddl)
\&                \-h \-? \-\-usage \-\-help     Prints this usage information.
\&                \-c \-\-connection_name     either a valid DBI DSN or an alias
\&                                         configured by DBIx::Class::Schema::Config
\&                \-f \-\-force               forcefully replace existing DDLs. [DANGER]
\&                \-s \-\-schema              the class name of the schema to generate
\&                                         DDLs/deploy for
\&                \-I \-\-include             paths to load into @INC
\&                \-o \-\-script_dir          output path
\&                \-d \-\-database            database backends to generate DDLs for. See
\&                                         SQL::Translator::Producer::* for valid values
\&
\&                commands:
\&
\&                install                       install to the specified database connection
\&                upgrade                       upgrade the specified database connection
\&                write_ddl                     only write ddl files
.Ve
.PP
If you don't like any of the defaults, you can subclass to override
.PP
.Vb 5
\&    use App::DH;
\&    {
\&        package MyApp;
\&        use  Moose;
\&        extends \*(AqApp::DH\*(Aq;
\&
\&        has \*(Aq+connection_name\*(Aq => ( default => sub { \*(Aqproduction\*(Aq } );
\&        has \*(Aq+schema\*(Aq          => ( default => sub { \*(AqMyApp::Schema\*(Aq } );
\&        _\|_PACKAGE_\|_\->meta\->make_immutable;
\&    }
\&    MyApp\->new_with_options\->run;
.Ve
.SH "COMMANDS"
.IX Header "COMMANDS"
.SS "write_ddl"
.IX Subsection "write_ddl"
Only generate ddls for deploy/upgrade
.PP
.Vb 1
\&    dh.pl [...params] write_ddl
.Ve
.SS "write_ddl"
.IX Subsection "write_ddl"
Install to connection \*(L"\-\-connection_name\*(R"
.PP
.Vb 1
\&    dh.pl [...params] install
.Ve
.SS "upgrade"
.IX Subsection "upgrade"
Upgrade connection \*(L"\-\-connection_name\*(R"
.PP
.Vb 1
\&    dh.pl [...params] upgrade
.Ve
.SH "PARAMETERS"
.IX Header "PARAMETERS"
.SS "\-\-connection_name"
.IX Subsection "--connection_name"
.Vb 1
\&    \-c/\-\-connection_name
.Ve
.PP
Specify the connection details to use for deployment.
Can be a name of a configuration in a \f(CW\*(C`DBIx::Class::Schema::Config\*(C'\fR configuration if the \*(L"\-\-schema\*(R" uses it.
.PP
.Vb 1
\&    \-\-connection_name \*(Aqdbi:SQLite:/path/to/db\*(Aq
\&
\&    \-cdevelopment
.Ve
.SS "\-\-force"
.IX Subsection "--force"
Overwrite existing \s-1DDL\s0 files of the same version.
.PP
.Vb 1
\&    \-f/\-\-force
.Ve
.SS "\-\-schema"
.IX Subsection "--schema"
.Vb 1
\&    \-s/\-\-schema
.Ve
.PP
The class name of the schema to load for DDL/Deployment
.PP
.Vb 2
\&    \-sMyProject::Schema
\&    \-\-schema MyProject::Schema
.Ve
.SS "\-\-include"
.IX Subsection "--include"
.Vb 1
\&    \-I/\-\-include
.Ve
.PP
Add a given library path to \f(CW@INC\fR prior to loading \f(CW\*(C`schema\*(C'\fR
.PP
.Vb 2
\&    \-I../lib
\&    \-\-include ../lib
.Ve
.PP
May be specified multiple times.
.SS "\-\-script_dir"
.IX Subsection "--script_dir"
.Vb 1
\&    \-o/\-\-script_dir
.Ve
.PP
Specify where to write the per-backend \s-1DDL\s0's.
.PP
Default is ./share/ddl
.PP
.Vb 2
\&    \-o/tmp/ddl
\&    \-\-script_dir /tmp/ddl
.Ve
.SS "\-\-database"
.IX Subsection "--database"
.Vb 1
\&    \-d/\-\-database
.Ve
.PP
Specify the \f(CW\*(C`SQL::Translator::Producer::*\*(C'\fR backend to use for generating DDLs.
.PP
.Vb 2
\&    \-dSQLite
\&    \-\-database PostgreSQL
.Ve
.PP
Can be specified multiple times.
.PP
Default is introspected from looking at whatever \*(L"\-\-connection_name\*(R" connects to.
.SH "CREDITS"
.IX Header "CREDITS"
This module is mostly code by mst, sponsored by nordaaker.com <http://nordaaker.com>, and I've only tidied it up and made it more \s-1CPAN\s0 Friendly.
.SH "SPONSORS"
.IX Header "SPONSORS"
The authoring of the initial incarnation of this code is kindly sponsored by nordaaker.com <http://nordaaker.com>.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
kentnl \- Kent Fredric (cpan:KENTNL) <kentfredric@gmail.com>
.IP "\(bu" 4
mst \- Matt S. Trout (cpan:MSTROUT) <mst@shadowcat.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2013 by The App::DH Authors, Contributors, and Sponsors.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
